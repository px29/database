{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The top-level class is the QueryPlan in the package project.\
\
We have a reset(int index) method in both ExternalSortOperator and SortOperator. The index indicates the tuple index that we want to return in the right relation. In the ExternalSortOperator, we push the reset(index) method to TupleReader. According to the tuple index, we calculate the position of it  in the input channel, then set the position back and  read in buffer from that position.  We don\'92t buffer left or right relation into the operator itself but compare the two tuples and return one by one. The algorithm is just as in the textbook, so it doesn\'92t keep the unbounded state. \
\
For the Distinct, we use the sort-based method, and we don\'92t buffer the total children tuples into the distinct operator but just compare and return the tuples one by one so it doesn\'92t keep unbounded state. \
\
\
\
\
}